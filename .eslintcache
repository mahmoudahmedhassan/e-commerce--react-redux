[{"D:\\projects\\shopping-cart\\src\\index.js":"1","D:\\projects\\shopping-cart\\src\\App.js":"2","D:\\projects\\shopping-cart\\src\\redux\\store.js":"3","D:\\projects\\shopping-cart\\src\\pages\\singleproduct\\ProductDetales.js":"4","D:\\projects\\shopping-cart\\src\\Components\\header\\Header.js":"5","D:\\projects\\shopping-cart\\src\\Components\\navbar\\Navbar.js":"6","D:\\projects\\shopping-cart\\src\\pages\\cart\\Cart.js":"7","D:\\projects\\shopping-cart\\src\\redux\\rootRducer.js":"8","D:\\projects\\shopping-cart\\src\\Components\\footer\\Footer.js":"9","D:\\projects\\shopping-cart\\src\\pages\\Home\\Home.js":"10","D:\\projects\\shopping-cart\\src\\Components\\Select.js":"11","D:\\projects\\shopping-cart\\src\\redux\\actions\\actions.js":"12","D:\\projects\\shopping-cart\\src\\redux\\reducer\\reducer.js":"13","D:\\projects\\shopping-cart\\src\\Components\\products\\Products.js":"14","D:\\projects\\shopping-cart\\src\\redux\\actions\\types.js":"15"},{"size":341,"mtime":1627885872748,"results":"16","hashOfConfig":"17"},{"size":778,"mtime":1628318836112,"results":"18","hashOfConfig":"17"},{"size":360,"mtime":1627978456303,"results":"19","hashOfConfig":"17"},{"size":2859,"mtime":1632180429082,"results":"20","hashOfConfig":"17"},{"size":1600,"mtime":1631855236855,"results":"21","hashOfConfig":"17"},{"size":696,"mtime":1628391960529,"results":"22","hashOfConfig":"17"},{"size":4214,"mtime":1631848310913,"results":"23","hashOfConfig":"17"},{"size":201,"mtime":1628009989861,"results":"24","hashOfConfig":"17"},{"size":236,"mtime":1628318870670,"results":"25","hashOfConfig":"17"},{"size":201,"mtime":1628010460219,"results":"26","hashOfConfig":"17"},{"size":1148,"mtime":1631970497883,"results":"27","hashOfConfig":"17"},{"size":1199,"mtime":1631597695429,"results":"28","hashOfConfig":"17"},{"size":2252,"mtime":1631854508480,"results":"29","hashOfConfig":"17"},{"size":1886,"mtime":1631081378761,"results":"30","hashOfConfig":"17"},{"size":392,"mtime":1631514488623,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"t33gx7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"D:\\projects\\shopping-cart\\src\\index.js",[],["70","71"],"D:\\projects\\shopping-cart\\src\\App.js",[],"D:\\projects\\shopping-cart\\src\\redux\\store.js",[],"D:\\projects\\shopping-cart\\src\\pages\\singleproduct\\ProductDetales.js",["72","73","74"],"import { React, useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProduct, addToCart } from \"../../redux/actions/actions\";\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\";\r\nimport { motion } from \"framer-motion\";\r\nimport Select from \"../../Components/Select\";\r\n\r\nfunction ProductDetales({ product, fetchProduct,addToCart }) {\r\n\r\n  // const [select, upDateSelect] = useState(1);\r\n  // console.log(`hey :${select}`);\r\n  // const handleSelect = (e) => {\r\n  //   upDateSelect(e.target.value);\r\n  // };\r\n\r\n  const { id, image, title, description, price, category } = product ?? {};\r\n  \r\n  useEffect(() => {\r\n    fetchProduct();\r\n  }, []);\r\n\r\n  return (\r\n \r\n    <Container>\r\n      <div className=\"ProductDetales\">\r\n        <Row>\r\n          <Col md={12} lg={6}>\r\n            <motion.div\r\n              className=\"product-img\"\r\n              initial={{ x: -1000 }}\r\n              animate={{ x: 0 }}\r\n              transition={{ type: \"spring\", duration: 1 }}\r\n            >\r\n             <Image src={image} alt={title} /> \r\n             </motion.div>\r\n          </Col>\r\n          <Col md={12} lg={6}>\r\n            <motion.div\r\n              className=\"product-details\"\r\n              initial={{ y: 1000 }}\r\n              animate={{ y: 0 }}\r\n              transition={{ type: \"spring\", duration: 1 }}\r\n            >\r\n              <div className=\"category\"> {category}</div>\r\n\r\n              <div className=\"title\">\r\n                <h1>{title}</h1>\r\n                <p>EGP {price}</p>\r\n              </div>\r\n\r\n               {/* <div className=\"selected\">\r\n                \r\n                <select onChange={handleSelect} className=\"Selected-Value\">\r\n                  <option value=\"1\">1</option>\r\n                  <option value=\"2\">2</option>\r\n                  <option value=\"3\">3</option>\r\n                  <option value=\"4\">4</option>\r\n                  <option value=\"5\">5</option>\r\n                  <option value=\"6\">6</option>\r\n                  <option value=\"7\">7</option>\r\n                </select>\r\n\r\n                <button\r\n                  onClick={() => addToCart(id, select)}\r\n                  className=\"selected-butn\">\r\n                  Add To Cart\r\n                </button>\r\n\r\n              </div>   */}\r\n\r\n               <Select id={id} />\r\n               \r\n              <div className=\"description\">{description}</div>\r\n            </motion.div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    fetchProduct: () => dispatch(fetchProduct()),\r\n    // addToCart: (id, value) => dispatch(addToCart(id, value)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    product: state.data.product,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToState)(ProductDetales);\r\n","D:\\projects\\shopping-cart\\src\\Components\\header\\Header.js",["75"],"import {React,useState,useEffect} from \"react\";\r\nimport { BiShoppingBag } from \"react-icons/bi\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport  {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\"\r\n\r\nfunction Header({cart}) {\r\n  const [cartCount,updateCartCount] =useState(0);\r\n  const [orderTotal,upDataOrderTotal] = useState('');\r\n\r\n  useEffect(() => {\r\n    let Count = 0;\r\n    let total =0;\r\n\r\n     cart.map((el) => {\r\n      Count += el.quantity;\r\n      // Count ++;\r\n      total += el.quantity * el.price;\r\n\r\n     });\r\n\r\n     console.log(`zzzz ${cart}`)\r\n\r\n     updateCartCount( Count);\r\n    //  upDataOrderTotal(total.parseFloat()); \r\n\r\n     upDataOrderTotal(total.toFixed(1));\r\n  \r\n  },[cart,cartCount,updateCartCount,upDataOrderTotal]);\r\n  \r\n  return (\r\n    <div className=\"top-header\">\r\n      <Container>\r\n        \r\n        <div className=\"header\">\r\n          <div className=\"logo\">\r\n            <h3>\r\n              <span>one</span> store\r\n            </h3>\r\n          </div>\r\n\r\n          <Link to='/cart'> \r\n          <div className=\"store\">\r\n            <div className=\"all-price\">\r\n              EGP <span>{orderTotal}</span>\r\n            </div>\r\n\r\n            <div className=\"the-cart\">\r\n              <span>{cartCount}</span>\r\n              <BiShoppingBag className=\"the-cart-icon\" />\r\n            </div>\r\n          </div>\r\n          </Link>\r\n          \r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n \r\nconst mapToStateToProps = (state) =>{\r\n  return {\r\n    cart : state.data.cart\r\n  };\r\n}\r\nexport default connect(mapToStateToProps)(Header);\r\n","D:\\projects\\shopping-cart\\src\\Components\\navbar\\Navbar.js",[],"D:\\projects\\shopping-cart\\src\\pages\\cart\\Cart.js",["76"],"import {React,useState,useEffect} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container} from \"react-bootstrap\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\nimport {deleteProduct} from '../../redux/actions/actions';\r\nimport { motion } from \"framer-motion\";\r\nimport Select from \"../../Components/Select\";\r\n\r\nfunction Cart({ cart,deleteProduct }) {\r\n  const [cartCount,updateCartCount] =useState(0);\r\n  const [subtotal,upDateSubtotal]=useState('');\r\n  const [orderTotal,upDataOrderTotal] = useState('');\r\n\r\n  useEffect(() => {\r\n    let count =0;\r\n    let total =0;\r\n    let delivery= 50;\r\n    cart.map(el=>(\r\n      count +=el.quantity,\r\n      total +=el.quantity*el.price\r\n    ))\r\n    updateCartCount(count);\r\n    upDateSubtotal(total);\r\n    upDataOrderTotal(total+delivery.toFixed(1))\r\n\r\n  }, [cart,subtotal,cartCount,updateCartCount,upDateSubtotal])\r\n \r\n const cartItems = (\r\n    <>\r\n      {cart.map((item) => (\r\n        \r\n      <motion.div className=\"item-content\"\r\n\r\n        initial={{ scale: 0 }}\r\n        animate={{\r\n           rotate: 360,\r\n            scale: 1,\r\n           transition:{\r\n          type:\"spring\",\r\n          stiffness: 260,\r\n          damping: 20,\r\n        }\r\n      }}\r\n \r\n        >\r\n          <div className=\"item-poster\">\r\n\r\n            <div className=\"item-poster-img\">\r\n            <img src={item.image} alt={item.title} />\r\n            </div>\r\n\r\n            <div className=\"item-title\">\r\n              <p>{item.title}</p>\r\n              <p>{item.price}</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"select-count-cart\">\r\n            <RiDeleteBin6Line className=\"delete-selected\" onClick={()=>deleteProduct(item.id)} />\r\n\r\n            {/* <div className=\"selected\">\r\n              <button onClick={ ()=> adjustProduct(item.id,selected)} className='selected-add'> Add</button>\r\n              <select onChange = {(e => upDateSelectd(e.target.value))} className=\"selected-value\"  >\r\n                {/* <option>{selected}</option> */}\r\n\r\n                {/* \r\n                <option value=\"1\">1</option>\r\n\r\n                <option value=\"2\">2</option>\r\n\r\n                <option value=\"3\">3</option>\r\n\r\n                <option value=\"4\">4</option>\r\n\r\n                <option value=\"5\">5</option>\r\n\r\n                <option value=\"6\">6</option>\r\n\r\n                <option value=\"7\">7</option>\r\n              </select>\r\n            </div>  \r\n            */}\r\n           \r\n\r\n            <Select/>\r\n\r\n          </div>\r\n\r\n        </motion.div>\r\n      ))}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container className ='main'>\r\n\r\n        <motion.div className=\"cart\" \r\n        initial={{ y: 1000 }}\r\n        animate={{ y: 0 }}\r\n        transition={{ type: \"spring\", duration: 1 }}\r\n        >\r\n          <div className=\"item\">\r\n            <h3>\r\n              your Shopping Bag <span> ({cart.length} items)</span>\r\n            </h3>\r\n            {cartItems}\r\n          </div>\r\n\r\n          {\r\n            cart.length > 0 ? (\r\n              <div className=\"order-summary\">\r\n              <h3>Order Summary</h3>\r\n              <div className=\"order-summary-content\">\r\n  \r\n                <div className='price-details'>\r\n                  <p className='subtotal'>\r\n                    <span>subtotal</span> <span>EGB {subtotal}</span>\r\n                  </p>\r\n  \r\n                  <p className='delivery'>\r\n                    <span>delivery</span> <span>EGB 50</span>\r\n                  </p>\r\n                </div>\r\n  \r\n                <div className='total-price'>\r\n                  <span>order total</span> <span>EGB {orderTotal}</span>\r\n                </div>\r\n  \r\n                <button className='checkout'> checkout </button>\r\n              </div>\r\n            </div>\r\n            ):null\r\n          }\r\n\r\n        </motion.div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n// const mapDispatchToState = (dispatch) => {\r\n//   return {\r\n//      deleteProduct:(id) => dispatch(deleteProduct(id)),\r\n//     //  adjustProduct:(id,value) => dispatch(adjustProduct(id,value))\r\n\r\n//   };\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cart: state.data.cart,\r\n  };\r\n};\r\nexport default connect(mapStateToProps,{deleteProduct})(Cart);\r\n","D:\\projects\\shopping-cart\\src\\redux\\rootRducer.js",[],"D:\\projects\\shopping-cart\\src\\Components\\footer\\Footer.js",[],"D:\\projects\\shopping-cart\\src\\pages\\Home\\Home.js",[],"D:\\projects\\shopping-cart\\src\\Components\\Select.js",[],"D:\\projects\\shopping-cart\\src\\redux\\actions\\actions.js",["77","78","79","80"],"\r\nimport {SET_PRODUCTS,SET_PRODUCT,ADD_TO_CART,DELETE_PRODUCT,ADJUST_TO_CART,QUANTITY_SELECT,SET_QUANTITY,SELECT_FROM_CART} from './types'\r\nimport axios from 'axios';\r\n \r\nexport const fetchProducts = () => dispatch => {\r\n\r\n    const URL='https://fakestoreapi.com/products';\r\n\r\n    axios.get(URL).then(res=> dispatch ({\r\n     type:SET_PRODUCTS,\r\n     payload:res.data\r\n    }))\r\n \r\n   .catch(err => console.log(err));    \r\n}\r\n \r\nexport const fetchProduct = id => dispatch =>{\r\n    const URL =`https://fakestoreapi.com/products/${id}`;\r\n\r\n    axios.get(URL).then(res => dispatch ({\r\n        type:SET_PRODUCT,\r\n        payload:res.data\r\n    })).catch(err =>console.log(err));\r\n\r\n };\r\n//  export const addToCart = (itemID,value) =>{\r\n//      return{\r\n//          type:ADD_TO_CART,\r\n//          payload:{\r\n//         id:itemID,\r\n//         value\r\n//      }\r\n//     }\r\n//  }\r\n\r\n export const addToCart = (itemID,value) => dispatch=>{\r\n    dispatch({\r\n        type:ADD_TO_CART,\r\n        payload:{\r\n       id:itemID,\r\n       value\r\n    }\r\n   })\r\n};\r\n\r\n \r\n \r\n export const deleteProduct = (itemID)=> (dispatch)=>{\r\n     dispatch({\r\n         type:DELETE_PRODUCT,\r\n         payload:itemID\r\n     })\r\n };\r\n\r\n \r\n\r\n","D:\\projects\\shopping-cart\\src\\redux\\reducer\\reducer.js",["81"],"import {SET_PRODUCTS,SET_PRODUCT,ADD_TO_CART,DELETE_PRODUCT,ADJUST_TO_CART} from '../actions/types'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    product:[],\r\n    cart:[],\r\n    loading:false,\r\n   };\r\n   const productsReducer =(state =initialState ,action)=>{\r\n    \r\n    switch (action.type) {\r\n\r\n      // fetch products\r\n\r\n      case SET_PRODUCTS:\r\n        return {\r\n          ...state,\r\n          products:action.payload,\r\n          loading: false,\r\n        }\r\n\r\n          // fetch product\r\n\r\n         case SET_PRODUCT:\r\n          return {\r\n              ...state,\r\n              product: action.payload,\r\n              loading: false\r\n          }\r\n\r\n        //  case ADD_TO_CART:\r\n\r\n        //   const item  = state.products.find(el => el.id === action.payload.id);\r\n        //   const inCart = state.cart.find(el => el.id === action.payload.id ? true : false);\r\n\r\n        //     return{\r\n        //       ...state,\r\n        //       cart :inCart ? \r\n        //       state.cart.map(el => el.id === action.payload.id ? {...el, quantity: +action.payload.value } : el) :\r\n        //       [...state.cart, {...item, quantity: +action.payload.value}]\r\n \r\n        //     };\r\n\r\n            case ADD_TO_CART:\r\n              const item  = state.products.find(el => el.id === action.payload.id);\r\n              const inCart = state.cart.find(el => el.id === action.payload.id ? true : false);\r\n    \r\n                return{\r\n                  ...state,\r\n                  cart :inCart ? \r\n                  state.cart.map(el => el.id === action.payload.id ? {...el, quantity:+action.payload.value} : el):\r\n                  [...state.cart,{...item,quantity: +action.payload.value}]\r\n                };\r\n\r\n \r\n            // case ADJUST_TO_CART:\r\n            //   return {\r\n            //     ...state,\r\n            //     cart: state.cart.map(el => el.id === action.payload.id ? {...el, quantity:+action.payload.value }: el)\r\n\r\n            //   }\r\n\r\n            case DELETE_PRODUCT:\r\n              return {\r\n                ...state,\r\n                cart:state.cart.filter(el => el.id !== action.payload)\r\n              }\r\n              \r\n              default: \r\n              return state\r\n        \r\n      }\r\n     \r\n  }\r\n  export default productsReducer","D:\\projects\\shopping-cart\\src\\Components\\products\\Products.js",["82"],"import { React, useEffect } from \"react\";\r\n import { connect } from \"react-redux\";\r\nimport { fetchProducts ,fetchProduct} from \"../../redux/actions/actions\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nfunction Products({ products, fetchProducts,fetchProduct }) {\r\n  useEffect(() => {\r\n    fetchProducts();\r\n   },[]);\r\n \r\n  return (\r\n    \r\n    <motion.div className=\"products\"\r\n    initial={{ y: 1000 }}\r\n    animate={{ y: 0 }}\r\n    transition={{ type: \"spring\", duration: 1 }}\r\n    >   \r\n          {products.length > 0 ?\r\n          \r\n          <Container>\r\n           <Row>\r\n            { products.map((product) => (\r\n             <Col xs={12} sm={6} md={4} lg={3}>\r\n              <Link to={`product/${product.id}`} onClick={() =>fetchProduct(product.id)} >\r\n                <Card className='card'>\r\n                    <div className='image-container'>\r\n                     <Card.Img variant=\"top\" src={product.image} className=\"card-img\" />\r\n                    </div>\r\n                  <Card.Body>\r\n                    <Card.Title>{product.price}</Card.Title>\r\n                    <Card.Text>{product.title}</Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Link>\r\n            </Col>\r\n       )) }\r\n         </Row>\r\n      </Container>\r\n       : <p>loading</p>\r\n          \r\n          }\r\n\r\n     </motion.div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.data.products,\r\n  };\r\n};\r\nconst mapDispatchToState = (dispatch) => {\r\n  return {\r\n    fetchProducts: () => dispatch(fetchProducts()),\r\n    fetchProduct:(id) => dispatch(fetchProduct(id))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToState)(Products);\r\n","D:\\projects\\shopping-cart\\src\\redux\\actions\\types.js",[],["83","84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":1,"column":28,"nodeType":"91","messageId":"92","endLine":1,"endColumn":36},{"ruleId":"89","severity":1,"message":"93","line":3,"column":24,"nodeType":"91","messageId":"92","endLine":3,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":20,"column":6,"nodeType":"96","endLine":20,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":15,"column":20,"nodeType":"100","messageId":"101","endLine":15,"endColumn":22},{"ruleId":"102","severity":1,"message":"103","line":19,"column":26,"nodeType":"104","messageId":"105","endLine":19,"endColumn":27},{"ruleId":"89","severity":1,"message":"106","line":2,"column":61,"nodeType":"91","messageId":"92","endLine":2,"endColumn":75},{"ruleId":"89","severity":1,"message":"107","line":2,"column":76,"nodeType":"91","messageId":"92","endLine":2,"endColumn":91},{"ruleId":"89","severity":1,"message":"108","line":2,"column":92,"nodeType":"91","messageId":"92","endLine":2,"endColumn":104},{"ruleId":"89","severity":1,"message":"109","line":2,"column":105,"nodeType":"91","messageId":"92","endLine":2,"endColumn":121},{"ruleId":"89","severity":1,"message":"106","line":1,"column":61,"nodeType":"91","messageId":"92","endLine":1,"endColumn":75},{"ruleId":"94","severity":1,"message":"110","line":13,"column":6,"nodeType":"96","endLine":13,"endColumn":8,"suggestions":"111"},{"ruleId":"85","replacedBy":"112"},{"ruleId":"87","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'addToCart' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchProduct'. Either include it or remove the dependency array. If 'fetchProduct' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["116"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'ADJUST_TO_CART' is defined but never used.","'QUANTITY_SELECT' is defined but never used.","'SET_QUANTITY' is defined but never used.","'SELECT_FROM_CART' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchProducts'. Either include it or remove the dependency array. If 'fetchProducts' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["117"],["114"],["115"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},"Update the dependencies array to be: [fetchProduct]",{"range":"122","text":"123"},"Update the dependencies array to be: [fetchProducts]",{"range":"124","text":"125"},[684,686],"[fetchProduct]",[501,503],"[fetchProducts]"]